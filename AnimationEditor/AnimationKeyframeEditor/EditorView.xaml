<UserControl x:Class="AnimationEditor.AnimationKeyframeEditor.EditorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:behaviors="clr-namespace:CommonControls.Behaviors;assembly=CommonControls"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors" 
             xmlns:s="http://schemas.singulink.com/xaml"
             xmlns:nodes="clr-namespace:AnimationEditor.AnimationBuilder.Nodes"
             xmlns:mathviews="clr-namespace:CommonControls.MathViews;assembly=CommonControls"
             xmlns:filterdialog="clr-namespace:CommonControls.FilterDialog;assembly=CommonControls" xmlns:animationkeyframeeditor="clr-namespace:AnimationEditor.AnimationKeyframeEditor" d:DataContext="{d:DesignInstance Type=animationkeyframeeditor:Editor}"
             mc:Ignorable="d" 
             d:DesignHeight="850" d:DesignWidth="800">
    <UserControl.Resources>

        <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>

        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Width="16" Height="16" Background="Transparent" Padding="5,5,5,5">
                            <Path x:Name="ExpandPath" Fill="Transparent" Stroke="#FF989898" Data="{StaticResource TreeArrow}">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="135" CenterX="3" CenterY="3"/>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA"/>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="RenderTransform" TargetName="ExpandPath">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" CenterX="3" CenterY="3"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BoneTreeViewStyle" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="1,0,0,0"/>
            <Setter Property="IsExpanded" Value="True"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Visibility" Value="Visible" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Border x:Name="Bd" SnapsToDevicePixels="true" Grid.Column="1" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="PART_Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>

                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>

                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ToolTipWrapper" TargetType="{x:Type ContentControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContentControl}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <Border Grid.Column="0" Background="LightBlue" BorderThickness="2" BorderBrush="CadetBlue" CornerRadius="5">
                                <ContentPresenter />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <HierarchicalDataTemplate x:Key="RootNode" ItemsSource="{Binding EditItems, UpdateSourceTrigger=PropertyChanged}">
            <ContentControl Style="{StaticResource ToolTipWrapper}" >
                <Label >Root</Label>
            </ContentControl>
        </HierarchicalDataTemplate>

        <DataTemplate x:Key="DefaultChild" >
            <ContentControl Style="{StaticResource ToolTipWrapper}" >
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal">
                        <CheckBox VerticalContentAlignment="Center"/>
                        <Label>Insert Animation</Label>
                        <Label>Frame Count : 24</Label>
                    </StackPanel>
                   
                <filterdialog:CollapsableFilterControl VerticalContentAlignment="Center"
                                    SelectedItem="{Binding AnimViewModel.SelectedAnimation, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    SearchItems="{Binding AnimViewModel.AnimationsForCurrentSkeleton, UpdateSourceTrigger=PropertyChanged}"     
                                    OnSearch="{Binding AnimViewModel.FiterByFullPath, UpdateSourceTrigger=PropertyChanged}"   
                                    IsManipulationEnabled="False"
                                    LabelTotalWidth="0"   
                                    MaxHeight="400"
                                    ShowLabel="false"/>
                </StackPanel>
            </ContentControl>
        </DataTemplate>

        <nodes:NodeTemplateSelector x:Key="templateSelector"
                    AnimationNodeTemplate="{StaticResource RootNode}"
                    AnimationEditorTemplate="{StaticResource DefaultChild}" />
    </UserControl.Resources>



    <DockPanel LastChildFill="False">
        <Label  DockPanel.Dock="Top" Content="Animation Key Frame Editor" FontSize="18" FontWeight="Bold"/>
        <Label  DockPanel.Dock="Top" ContentStringFormat="You are currently editing frame Nr: {0}"  Content="{Binding CurrentFrameNumber, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" FontSize="18" FontWeight="Bold"/>

        <Grid DockPanel.Dock="Top" Margin="5,0,5,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <CheckBox DockPanel.Dock="Top" Content="Allow to select animroot node" IsChecked="{Binding AllowToSelectAnimRoot.Value, UpdateSourceTrigger=PropertyChanged}"  />
        </Grid>
        
        <Grid DockPanel.Dock="Top" Margin="5,0,5,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Button Grid.Column="0" Content="Insert New Frame"  Click="{s:MethodBinding InsertNewFrame}" Margin="0,0,2,0"/>
            <Button Grid.Column="1" Content="Duplicate Frame"  Click="{s:MethodBinding DuplicateFrame}"  Margin="2,0,2,0"/>
            <Button Grid.Column="2" Content="Reset Pose"  Click="{s:MethodBinding ResetPose}" Margin="2,0,0,0"/>
        </Grid>
        <Grid DockPanel.Dock="Top" Margin="5,5,5,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Button Grid.Column="0" Content="Select"  Click="{s:MethodBinding EnterSelectMode}" Margin="0,0,2,0"/>
            <Button Grid.Column="1" Content="Select previous bones"  Click="{s:MethodBinding SelectPreviousBones}" Margin="0,0,2,0"/>
            <Button Grid.Column="2" Content="Move"  Click="{s:MethodBinding EnterMoveMode}" Margin="0,0,2,0"/>
            <Button Grid.Column="3" Content="Rotate"  Click="{s:MethodBinding EnterRotateMode}"  Margin="2,0,2,0"/>
            <Button Grid.Column="4" Content="Scale"  Click="{s:MethodBinding EnterScaleMode}" Margin="2,0,0,0"/>
        </Grid>
        <Grid DockPanel.Dock="Top" Margin="4,5,5,0">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <Button Grid.Column="0" Content="Copy Pose"  Click="{s:MethodBinding DeleteBoneAction}" Margin="2,0,0,0"/>
            <Button Grid.Column="1" Content="Copy selected node"  Click="{s:MethodBinding CopyBoneAction}" Margin="2,0,0,0"/>
            <Button Grid.Column="2" Content="Paste Pose"  Click="{s:MethodBinding CopyBoneAction}" Margin="2,0,0,0"/>
            <Button Grid.Column="3" Content="Paste into selected node"  Click="{s:MethodBinding CopyBoneAction}" Margin="2,0,0,0"/>
            <Button Grid.Column="4" Content="Copy n paste previous edited nodes"  Click="{s:MethodBinding CopyBoneAction}" Margin="2,0,0,0"/>
        </Grid>

        <Button DockPanel.Dock="Top" Margin="5" Content="Save" Click="{s:MethodBinding SaveSkeletonAction}"/>
    </DockPanel>
</UserControl>
