<UserControl x:Class="KitbasherEditor.Views.SceneExplorerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:KitbasherEditor.Views" 
              xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Royale" 
             xmlns:simple="clr-namespace:CommonControls.Simple;assembly=CommonControls" 
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:behaviors="clr-namespace:CommonControls.Behaviors;assembly=CommonControls"
             xmlns:valueconverters="clr-namespace:KitbasherEditor.ValueConverters"
             xmlns:resources="clr-namespace:CommonControls.Resources;assembly=CommonControls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/CommonControls;component/Resources/OptionalRadioButtonStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <valueconverters:SceneNodeToImageConverter x:Key="ImageValueConverter"/>
            <valueconverters:SceneNodeToRadioButtonGroupingConverter x:Key="RadioButtonGroupConverter"/>
            <valueconverters:SceneNodeContextMenuEnabledConverter x:Key="ContextMenuEnabledConverter"/>
            <local:TreeItemDataTemplateSelector x:Key="TreeItemDataTemplateSelector"/>

            <HierarchicalDataTemplate x:Key="DefaultTreeNodeStyle" ItemsSource="{Binding Children, UpdateSourceTrigger=PropertyChanged}">
                <StackPanel Orientation="Horizontal">
                    <simple:OptionalRadioButton Focusable="true"  VerticalAlignment="Center"
                        Style="{StaticResource OptionalRadioButtonStyle}"                     
                        IsChecked="{Binding IsVisible, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                        GroupName="{Binding Path=. , Converter={StaticResource RadioButtonGroupConverter}}"/>
                    <Image Width="18" Margin="2,0"  Grid.Column="0" Source="{Binding Path=. , Converter={StaticResource ImageValueConverter}}"/>
                    <TextBlock Text="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold" Margin="2,0"/>
                </StackPanel>
            </HierarchicalDataTemplate>

            <HierarchicalDataTemplate x:Key="ReferenceTreeNodeStyle" ItemsSource="{Binding Children, UpdateSourceTrigger=PropertyChanged}">
                <StackPanel Orientation="Horizontal" >
                    <simple:OptionalRadioButton Focusable="true"  VerticalAlignment="Center"
                        Style="{StaticResource OptionalRadioButtonStyle}"                     
                        IsChecked="{Binding IsVisible, UpdateSourceTrigger=PropertyChanged , Mode=TwoWay}"
                        GroupName="{Binding Path=. , Converter={StaticResource RadioButtonGroupConverter}}"/>
                    <Image Width="18" Margin="2,0" Source="{Binding Source={x:Static resources:ResourceController.LockIcon}}" />
                    <Image  Width="18" Margin="2,0" Source="{Binding Path=. , Converter={StaticResource ImageValueConverter}}" />
                    <TextBlock  Text="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged}" Margin="2,0" Foreground="Gray"/>
                </StackPanel>
            </HierarchicalDataTemplate>

        </ResourceDictionary>
    </UserControl.Resources>

    <DockPanel>
        <TreeView 
           behaviors:TreeViewExtension.SelectItemOnRightClick="True"
           TreeViewItem.PreviewMouseDoubleClick="TreeViewItem_PreviewMouseDoubleClick"
           ItemsSource="{Binding Path=SceneGraphRootNodes, UpdateSourceTrigger=PropertyChanged}"
           ItemTemplateSelector="{StaticResource TreeItemDataTemplateSelector}">
            
            <b:Interaction.Behaviors>
                <behaviors:BindableSelectedItemBehavior SelectedItem="{Binding SelectedNode, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
            </b:Interaction.Behaviors>
            
            <TreeView.Resources>
                <ContextMenu x:Key="NodeContextMenu">
                    <MenuItem Header="Make editable"
                               Command="{Binding DataContext.MakeNodeEditableCommand,  RelativeSource={RelativeSource FindAncestor, AncestorType=TreeView}}" 
                               CommandParameter="{Binding}"
                              
                               IsEnabled="{Binding Path=., 
                               Converter={StaticResource ContextMenuEnabledConverter}, 
                               ConverterParameter={x:Static valueconverters:NodeConvertionMode.MakeEditable}}"/>

                    <MenuItem Header="Remove"
                               Command="{Binding DataContext.DeleteNodeCommand,  RelativeSource={RelativeSource FindAncestor, AncestorType=TreeView}}" 
                               CommandParameter="{Binding}"
                              
                               IsEnabled="{Binding Path=., 
                               Converter={StaticResource ContextMenuEnabledConverter}, 
                               ConverterParameter={x:Static valueconverters:NodeConvertionMode.DeleteNode}}"/>

                    <MenuItem Header="Ungroup - todo"/>
                </ContextMenu>

                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                      Color="LightBlue" />
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                      Color="LightBlue" />
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
                      Color="Black" />
            </TreeView.Resources>

            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" />
                    <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True" />
                    <Setter Property="ContextMenu" Value="{StaticResource NodeContextMenu}"/>
                </Style>
            </TreeView.ItemContainerStyle>


        </TreeView>
    </DockPanel>
</UserControl>
